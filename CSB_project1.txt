Cyber Security Base 2023 - Project I

The application 'Opeapp' has CSRF vulnerability and four security vulnerabilities from OWASP Top 20-list 2017.
Flaws are: CSRF, Injection,
Flaws and their fixes are described below.

LINK: https://github.com/Ethervortex/cybersecurity-project
Installation instructions:
- Install Django if not yet installed: python -m pip install Django
- Clone repository: git clone https://github.com/Ethervortex/cybersecurity-project.git
- Start development server: python manage.py runserver
- Application starts at localhost:8000/opeapp

FLAW 1 (CSRF):
https://github.com/Ethervortex/cybersecurity-project/opeapp/templates/students.html
https://github.com/Ethervortex/cybersecurity-project/opeapp/templates/courses.html
https://github.com/Ethervortex/cybersecurity-project/opeapp/templates/grades.html
The forms in students.html, courses.html and grades.html have Cross-site Request Forgery (CSRF) vulnerabilities.
Fix:
Uncomment lines '{% csrf_token %}' in students, courses and grades templates:
https://github.com/Ethervortex/cybersecurity-project//opeapp/templates/students.html#L17
https://github.com/Ethervortex/cybersecurity-project/opeapp/templates/students.html#L27
https://github.com/Ethervortex/cybersecurity-project/opeapp/templates/courses.html#L17
https://github.com/Ethervortex/cybersecurity-project/opeapp/templates/grades.html#L12

FLAW 2 (SQL Injection):

The student search form in students.html uses raw SQL query where performing SQL injection is possible.
User is supposed to be able to access only those students that the user has created, but by using SQL
injection it is possible to retrieve students added by other creator. This can be done for example by
doing search:
' OR creator_id = 1; --
Now all students created by id=1 are listed and sensitive student
information (grades) can be viewed.
Fix:
Comment out the whole with statement (lines ) and uncomment safe version using the Django ORM to filter the data:
